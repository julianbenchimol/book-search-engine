{"version":3,"sources":["utils/auth.js","utils/API.js","utils/localStorage.js","utils/mutations.js","pages/SearchBooks.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getMe","fetch","headers","authorization","concat","deleteBook","bookId","method","removeBookId","savedBookIds","JSON","parse","updatedSavedBookIds","filter","savedBookId","stringify","LOGIN","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","SAVE_BOOK","_templateObject3","SearchBooks","_useMutation","useMutation","_useMutation2","_slicedToArray","saveBook","_useState","error","useState","_useState2","searchedBooks","setSearchedBooks","_useState3","_useState4","searchInput","setSearchInput","_useState5","_useState6","setSavedBookIds","useEffect","bookIdArr","length","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","_yield$response$json","items","bookData","wrap","_context","prev","next","preventDefault","abrupt","sent","ok","Error","json","map","book","_book$volumeInfo$imag","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","t0","console","stop","_x","apply","arguments","handleSaveBook","_ref2","_callee2","bookToSave","_context2","find","Auth","loggedIn","_toConsumableArray","_x2","_jsxs","_Fragment","children","_jsx","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","SavedBooks","userData","setUserData","userDataLength","Object","keys","getUserData","user","handleDeleteBook","updatedUser","savedBooks","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","createUser","handleInputChange","_event$target","_objectSpread","_defineProperty","_yield$createUser","data","currentTarget","checkValidity","stopPropagation","variables","login","addUser","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","loginUser","log","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","SignUpForm","httpLink","createHttpLink","uri","authLink","setContext","_","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fba5e465.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// save book data for a logged in user\nexport const saveBook = (bookData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  });\n};\n\n// remove saved book data for a logged in user\nexport const deleteBook = (bookId, token) => {\n  return fetch(`/api/users/books/${bookId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGoogleBooks = (query) => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","import {gql} from '@apollo/client'\r\n\r\nexport const LOGIN = gql `\r\n    mutation LoginUser($email: String!, $password: String!){\r\n        login(email: $email, password: $password){\r\n            token\r\n            user{\r\n                _id\r\n                username\r\n                email\r\n                bookCount\r\n                savedBooks{\r\n                    bookId\r\n                    title\r\n                    description\r\n                    authors\r\n                    link\r\n                    image\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ADD_USER = gql `\r\n    mutation addUser($username: String!, $email: String!, $password: String!){\r\n        addUser(username: $username, email: $email, password: $password){\r\n            token\r\n            user{\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const SAVE_BOOK = gql `\r\n    mutation saveBook($input: bookInput!){\r\n        saveBook(input: $input){\r\n            _id\r\n            username\r\n            email\r\n            savedBooks{\r\n                bookId\r\n                title\r\n                description\r\n                authors\r\n                link\r\n                image\r\n            }\r\n        }\r\n    }\r\n\r\n`","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport {SAVE_BOOK} from '../utils/mutations'\nimport { useMutation } from '@apollo/client';\n\nconst SearchBooks = () => {\n  const [saveBook, {error}] = useMutation(SAVE_BOOK)\n  \n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\r\n\r\nimport { getMe, deleteBook } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nimport { removeBookId } from '../utils/localStorage';\r\n\r\nconst SavedBooks = () => {\r\n  const [userData, setUserData] = useState({});\r\n\r\n  // use this to determine if `useEffect()` hook needs to run again\r\n  const userDataLength = Object.keys(userData).length;\r\n\r\n  useEffect(() => {\r\n    const getUserData = async () => {\r\n      try {\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n        if (!token) {\r\n          return false;\r\n        }\r\n\r\n        const response = await getMe(token);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n\r\n        const user = await response.json();\r\n        setUserData(user);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    getUserData();\r\n  }, [userDataLength]);\r\n\r\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\r\n  const handleDeleteBook = async (bookId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await deleteBook(bookId, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n      // upon success, remove book's id from localStorage\r\n      removeBookId(bookId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved books!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBooks.length\r\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\r\n            : 'You have no saved books!'}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\r\n                    Delete this Book!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBooks;\r\n","import { useMutation } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const[createUser] = useMutation(ADD_USER)\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n  try {\n      const { data } = await createUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;","// see SignupForm.js for comments\nimport { useMutation } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { LOGIN } from '../utils/mutations';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [loginUser] = useMutation(LOGIN)\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser({\n        variables: {...userFormData}\n      });\n        Auth.login(response.login.token)\n        \n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\nimport {ApolloClient, InMemoryCache, ApolloProvider, createHttpLink} from '@apollo/client'\nimport {setContext} from '@apollo/client/link/context'\nimport auth from './utils/auth';\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\"\n})\n\nconst authLink = setContext((_, {headers}) =>{\n  const token = localStorage.getItem(\"id_token\")\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client = {client}>\n      <Router>\n      <>\n        <Navbar />\n        <Routes>\n          <Route \n            path='/' \n            element={<SearchBooks />} \n          />\n          <Route \n            path='/saved' \n            element={<SavedBooks />} \n          />\n          <Route \n            path='*'\n            element={<h1 className='display-2'>Wrong page!</h1>}\n          />\n        </Routes>\n      </>\n    </Router>\n    </ApolloProvider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}